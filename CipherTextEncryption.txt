import string

# Helper function to create Playfair cipher matrix
def generate_matrix(key):
    key = "".join(dict.fromkeys(key.replace('j', 'i')))  # Removing duplicates and treating 'j' as 'i'
    alphabet = string.ascii_lowercase.replace('j', '')  # Removing 'j' from the alphabet
    
    matrix = []
    for char in key + alphabet:
        if char not in matrix:
            matrix.append(char)
    
    # Return the matrix as a 5x5 list
    return [matrix[i:i+5] for i in range(0, 25, 5)]

# Function to find the position of letters in the matrix
def find_position(matrix, char):
    for i, row in enumerate(matrix):
        if char in row:
            return i, row.index(char)
    return None

# Playfair cipher rules for encryption
def encrypt_pair(matrix, pair):
    r1, c1 = find_position(matrix, pair[0])
    r2, c2 = find_position(matrix, pair[1])
    
    # Same row
    if r1 == r2:
        return matrix[r1][(c1 + 1) % 5] + matrix[r2][(c2 + 1) % 5]
    # Same column
    elif c1 == c2:
        return matrix[(r1 + 1) % 5][c1] + matrix[(r2 + 1) % 5][c2]
    # Rectangle swap
    else:
        return matrix[r1][c2] + matrix[r2][c1]

# Function to prepare the text for encryption by forming digraphs
def prepare_text(text):
    text = text.lower().replace("j", "i").replace(" ", "")  # Make all lowercase, replace 'j' with 'i', and remove spaces
    prepared_text = []
    i = 0
    while i < len(text):
        a = text[i]
        b = text[i + 1] if i + 1 < len(text) else 'x'
        if a == b:  # If two letters are the same, insert an 'x'
            prepared_text.append(a + 'x')
            i += 1
        else:
            prepared_text.append(a + b)
            i += 2
    if len(prepared_text[-1]) == 1:  # If the last digraph is a single letter, append 'x'
        prepared_text[-1] += 'x'
    return prepared_text

# Encrypt the plaintext using Playfair cipher
def encrypt(plaintext, key):
    matrix = generate_matrix(key)  # Generate the matrix using the keyword
    prepared_text = prepare_text(plaintext)  # Prepare the plaintext for encryption
    ciphertext = ""
    for pair in prepared_text:
        ciphertext += encrypt_pair(matrix, pair)
    return ciphertext

# Testing the Playfair cipher with the given keyword and plaintext
key = "explanation"
plaintext = "Information security is a MUST to learn"

ciphertext = encrypt(plaintext, key)
print(f"Ciphertext: {ciphertext}")
